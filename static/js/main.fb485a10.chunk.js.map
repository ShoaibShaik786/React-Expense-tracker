{"version":3,"sources":["components/Header.js","context/AppReducer.js","context/GlobalState.js","components/Balance.js","components/IncomeExpenses.js","components/Transaction.js","components/TransactionList.js","components/AddTransaction.js","App.js","index.js"],"names":["Header","state","action","type","transactions","filter","transaction","id","payload","initialState","GlobalContext","createContext","GlobalProvider","children","useReducer","AppReducer","dispatch","Provider","value","deleteTransaction","addTransaction","Balance","total","useContext","map","amount","reduce","acc","item","toFixed","IncomeExpenses","amounts","income","expense","className","Transaction","sign","text","Math","abs","onClick","TransactionList","AddTransaction","useState","setText","setAmount","onSubmit","e","preventDefault","newTransaction","floor","random","htmlFor","onChange","target","placeholder","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.fb485a10.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nexport const Header = () => {\r\n    return (\r\n        <h2>\r\n        Expense Tracker\r\n        </h2>\r\n    )\r\n}\r\n\r\n","export default (state, action) => {\r\n  switch(action.type) {\r\n   case 'DELETE_TRANSACTION':\r\n      return {\r\n        ...state,\r\n        transactions: state.transactions.filter(transaction => transaction.id !== action.payload)\r\n      }\r\n    case 'ADD_TRANSACTION':\r\n      return {\r\n        ...state,\r\n        transactions: [action.payload, ...state.transactions]\r\n      }\r\n    default:\r\n      return state;\r\n  }\r\n}","import React,{createContext, useReducer} from 'react';\r\nimport AppReducer from './AppReducer';\r\n\r\nconst initialState = \r\n{\r\n    transactions:[]\r\n}\r\n\r\nexport const GlobalContext = createContext(initialState);\r\n\r\nexport const GlobalProvider = ({children}) => {\r\n    const [state, dispatch]=useReducer(AppReducer, initialState);\r\n\r\n     // Actions\r\n  function deleteTransaction(id) {\r\n    dispatch({\r\n      type: 'DELETE_TRANSACTION',\r\n      payload: id\r\n    });\r\n  }\r\n\r\n  function addTransaction(transaction) {\r\n    dispatch({\r\n      type: 'ADD_TRANSACTION',\r\n      payload: transaction\r\n    });\r\n  }\r\n    return (<GlobalContext.Provider value={{transactions:state.transactions, deleteTransaction,addTransaction}}>\r\n        {children}\r\n    </GlobalContext.Provider>)\r\n\r\n}","import React, { useContext } from 'react';\r\nimport { GlobalContext } from '../context/GlobalState';\r\n\r\nexport const Balance = () => {\r\n    const { transactions } = useContext(GlobalContext);\r\n    const amounts = transactions.map(transaction => transaction.amount);\r\n   const total = amounts.reduce((acc, item) => (acc += item), 0).toFixed(2);\r\n return (\r\n        <>\r\n         <h4>Your Balance</h4>\r\n         <h1>${total}</h1>   \r\n        </>\r\n    )\r\n}\r\n","import React, { useContext } from 'react';\r\nimport { GlobalContext } from '../context/GlobalState';\r\nexport const IncomeExpenses = () => {\r\n  const { transactions } = useContext(GlobalContext);\r\n\r\n  const amounts = transactions.map(transaction => transaction.amount);\r\n\r\n  const income = amounts\r\n    .filter(item => item > 0)\r\n    .reduce((acc, item) => (acc += item), 0);\r\n\r\n  const expense = (\r\n    amounts.filter(item => item < 0).reduce((acc, item) => (acc += item), 0)*-1\r\n  );\r\n    return (\r\n        <div className=\"inc-exp-container\">\r\n        <div>\r\n          <h4>Income</h4>\r\n            <p className=\"money plus\">+${income}</p>\r\n        </div>\r\n        <div>\r\n          <h4>Expense</h4>\r\n            <p className=\"money minus\">-${expense}</p>\r\n        </div>\r\n      </div>\r\n    )\r\n}\r\n\r\n","import React,{useContext} from 'react'\r\nimport { GlobalContext } from '../context/GlobalState';\r\n\r\nexport const Transaction = ({transaction}) => {\r\n\r\n    const {deleteTransaction} = useContext(GlobalContext);\r\n      const sign = transaction.amount < 0 ? '-' : '+';\r\n\r\n    return (\r\n    <li className={transaction.amount < 0 ? 'minus' : 'plus'}>\r\n          {transaction.text}<span>{sign}${Math.abs(transaction.amount)}</span>\r\n          <button onClick={()=> deleteTransaction(transaction.id)} className=\"delete-btn\">x</button>\r\n    </li>\r\n    )\r\n}\r\n\r\n","import React, { useContext } from 'react';\r\nimport { Transaction } from './Transaction';\r\n\r\nimport { GlobalContext } from '../context/GlobalState';\r\n\r\nexport const TransactionList = () => {\r\n    const { transactions } = useContext(GlobalContext);\r\n\r\n    return (\r\n        <>\r\n      <h3>History</h3>\r\n      <ul className=\"list\">\r\n      {transactions.map(transaction => ( <Transaction key={transaction.id} transaction={transaction} />))}\r\n      </ul>\r\n        </>\r\n    )\r\n}\r\n","import React,{useState, useContext}from 'react'\r\nimport { GlobalContext } from '../context/GlobalState';\r\n\r\nexport const AddTransaction = () => {\r\n  const [text, setText] = useState('');\r\n    const [amount, setAmount] = useState(0);\r\n\r\n  const { addTransaction } = useContext(GlobalContext);\r\n  const onSubmit = e => {\r\n    e.preventDefault();\r\n\r\n    const newTransaction = {\r\n      id: Math.floor(Math.random() * 100000000),\r\n      text,\r\n      amount: +amount\r\n    }\r\n\r\n    addTransaction(newTransaction);\r\n  }\r\n    return (\r\n        <>\r\n          <h3>Add new transaction</h3>\r\n      <form onSubmit={onSubmit}>\r\n        <div className=\"form-control\">\r\n          <label htmlFor=\"text\">Text</label>\r\n          <input type=\"text\" value={text} onChange={(e)=> setText(e.target.value)} placeholder=\"Enter text...\" />\r\n        </div>\r\n        <div className=\"form-control\">\r\n          <label htmlFor=\"amount\"\r\n            >Amount <br />\r\n            (negative - expense, positive - income)</label\r\n          >\r\n          <input type=\"number\" value={amount} onChange={(e)=> setAmount(e.target.value)} placeholder=\"Enter amount...\" />\r\n        </div>\r\n        <button className=\"btn\">Add transaction</button>\r\n      </form>  \r\n        </>\r\n    )\r\n}\r\n","import './App.css';\nimport {Header} from './components/Header';\nimport {Balance} from './components/Balance';\nimport {IncomeExpenses} from './components/IncomeExpenses';\nimport {TransactionList} from './components/TransactionList';\nimport {AddTransaction} from './components/AddTransaction';\n\nimport {GlobalProvider} from './context/GlobalState';\n\nfunction App() {\n  return (\n    <GlobalProvider>\n     <Header/>\n     <div className=\"container\">\n       <Balance/>\n       <IncomeExpenses/>\n       <TransactionList/>\n       <AddTransaction/>\n     </div>\n    </GlobalProvider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n\n\n"],"sourceRoot":""}